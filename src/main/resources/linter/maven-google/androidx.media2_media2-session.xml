<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
    <item name="androidx.media2.session.ConnectedControllersManager boolean isAllowedCommand(androidx.media2.session.MediaSession.ControllerInfo, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.LibraryResult LibraryResult(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.common.BaseResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.LibraryResult LibraryResult(int, androidx.media2.common.MediaItem, androidx.media2.session.MediaLibraryService.LibraryParams) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.common.BaseResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.LibraryResult LibraryResult(int, androidx.media2.common.MediaItem, java.util.List&lt;androidx.media2.common.MediaItem&gt;, androidx.media2.session.MediaLibraryService.LibraryParams) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.common.BaseResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.LibraryResult LibraryResult(int, java.util.List&lt;androidx.media2.common.MediaItem&gt;, androidx.media2.session.MediaLibraryService.LibraryParams) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.common.BaseResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.LibraryResult com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.LibraryResult&gt; createFutureWithResult(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.common.BaseResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaController com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.ADJUST_LOWER, android.media.AudioManager.ADJUST_RAISE, android.media.AudioManager.ADJUST_SAME, android.media.AudioManager.ADJUST_MUTE, android.media.AudioManager.ADJUST_UNMUTE, android.media.AudioManager.ADJUST_TOGGLE_MUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaController com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaController com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; setVolumeTo(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaController.MediaControllerImpl com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.ADJUST_LOWER, android.media.AudioManager.ADJUST_RAISE, android.media.AudioManager.ADJUST_SAME, android.media.AudioManager.ADJUST_MUTE, android.media.AudioManager.ADJUST_UNMUTE, android.media.AudioManager.ADJUST_TOGGLE_MUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaController.MediaControllerImpl com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaController.MediaControllerImpl com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; setVolumeTo(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplBase IMediaSession getSessionInterfaceIfAble(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplBase com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.ADJUST_LOWER, android.media.AudioManager.ADJUST_RAISE, android.media.AudioManager.ADJUST_SAME, android.media.AudioManager.ADJUST_MUTE, android.media.AudioManager.ADJUST_UNMUTE, android.media.AudioManager.ADJUST_TOGGLE_MUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplBase com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplBase com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; setVolumeTo(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplLegacy com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.ADJUST_LOWER, android.media.AudioManager.ADJUST_RAISE, android.media.AudioManager.ADJUST_SAME, android.media.AudioManager.ADJUST_MUTE, android.media.AudioManager.ADJUST_UNMUTE, android.media.AudioManager.ADJUST_TOGGLE_MUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplLegacy com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; adjustVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaControllerImplLegacy com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; setVolumeTo(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.media.AudioManager.FLAG_SHOW_UI, android.media.AudioManager.FLAG_ALLOW_RINGER_MODES, android.media.AudioManager.FLAG_PLAY_SOUND, android.media.AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE, android.media.AudioManager.FLAG_VIBRATE}"></val>
            <val name="flag" val="true"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaSessionLegacyStub void dispatchSessionTask(int, androidx.media2.session.MediaSessionLegacyStub.SessionTask) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaSessionLegacyStub void dispatchSessionTaskInternal(androidx.media2.session.SessionCommand, int, androidx.media2.session.MediaSessionLegacyStub.SessionTask) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaSessionLegacyStub void handleTaskOnExecutor(androidx.media2.session.MediaSession.ControllerInfo, androidx.media2.session.SessionCommand, int, androidx.media2.session.MediaSessionLegacyStub.SessionTask) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaSessionStub void dispatchSessionTask(IMediaController, int, int, androidx.media2.session.MediaSessionStub.SessionTask) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.MediaSessionStub void dispatchSessionTaskInternal(IMediaController, int, androidx.media2.session.SessionCommand, int, androidx.media2.session.MediaSessionStub.SessionTask) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommand SessionCommand(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup boolean hasCommand(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_CODE_CUSTOM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PLAY, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PAUSE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_PREPARE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SEEK_TO, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SPEED, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_PLAYLIST, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_PREVIOUS_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SKIP_TO_NEXT_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SHUFFLE_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_REPEAT_MODE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_PLAYLIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_ADD_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REMOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_REPLACE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_MOVE_PLAYLIST_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_GET_CURRENT_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_UPDATE_LIST_METADATA, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_MEDIA_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SET_SURFACE, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_SELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_PLAYER_DESELECT_TRACK, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_SET_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_VOLUME_ADJUST_VOLUME, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_FAST_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_REWIND, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_FORWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SKIP_BACKWARD, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_MEDIA_URI, androidx.media2.session.SessionCommand.COMMAND_CODE_SESSION_SET_RATING, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_LIBRARY_ROOT, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_UNSUBSCRIBE, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_CHILDREN, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_ITEM, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_SEARCH, androidx.media2.session.SessionCommand.COMMAND_CODE_LIBRARY_GET_SEARCH_RESULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllLibraryCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllPlayerBasicCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllPlayerCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllPlayerPlaylistCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllPredefinedCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllSessionCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder androidx.media2.session.SessionCommandGroup.Builder addAllVolumeCommands(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionCommandGroup.Builder void addCommands(int, android.util.SparseArray&lt;java.util.List&lt;java.lang.Integer&gt;&gt;) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media2.session.SessionCommand.COMMAND_VERSION_1, androidx.media2.session.SessionCommand.COMMAND_VERSION_2, androidx.media2.session.SessionCommand.COMMAND_VERSION_CURRENT}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionResult SessionResult(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.session.SessionResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionResult SessionResult(int, android.os.Bundle) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.session.SessionResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionResult SessionResult(int, android.os.Bundle, androidx.media2.common.MediaItem) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.session.SessionResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionResult SessionResult(int, android.os.Bundle, androidx.media2.common.MediaItem, long) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.session.SessionResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media2.session.SessionResult com.google.common.util.concurrent.ListenableFuture&lt;androidx.media2.session.SessionResult&gt; createFutureWithResult(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="false"></val>
            <val name="value" val="{androidx.media2.session.SessionResult.RESULT_SUCCESS, androidx.media2.common.BaseResult.RESULT_ERROR_UNKNOWN, androidx.media2.common.BaseResult.RESULT_ERROR_INVALID_STATE, androidx.media2.common.BaseResult.RESULT_ERROR_BAD_VALUE, androidx.media2.common.BaseResult.RESULT_ERROR_PERMISSION_DENIED, androidx.media2.common.BaseResult.RESULT_ERROR_IO, androidx.media2.common.BaseResult.RESULT_INFO_SKIPPED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_DISCONNECTED, androidx.media2.common.BaseResult.RESULT_ERROR_NOT_SUPPORTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_AUTHENTICATION_EXPIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PREMIUM_ACCOUNT_REQUIRED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_CONCURRENT_STREAM_LIMIT, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_PARENTAL_CONTROL_RESTRICTED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_NOT_AVAILABLE_IN_REGION, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SKIP_LIMIT_REACHED, androidx.media2.session.RemoteResult.RESULT_ERROR_SESSION_SETUP_REQUIRED}"></val>
        </annotation>
    </item>
</root>
