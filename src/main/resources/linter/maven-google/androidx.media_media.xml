<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
    <item name="android.support.v4.media.MediaBrowserCompat.MediaItem MediaItem(android.support.v4.media.MediaDescriptionCompat, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{android.support.v4.media.MediaBrowserCompat.MediaItem.FLAG_BROWSABLE, android.support.v4.media.MediaBrowserCompat.MediaItem.FLAG_PLAYABLE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat android.graphics.Bitmap getBitmap(java.lang.String) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat android.support.v4.media.RatingCompat getRating(java.lang.String) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_USER_RATING, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_RATING}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat java.lang.CharSequence getText(java.lang.String) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_AUTHOR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_WRITER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPOSER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPILATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DATE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_GENRE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_DESCRIPTION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_ID, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_URI}"></val>
            <val name="open" val="true"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat java.lang.String getString(java.lang.String) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_AUTHOR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_WRITER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPOSER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPILATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DATE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_GENRE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_DESCRIPTION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_ID, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_URI}"></val>
            <val name="open" val="true"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat long getLong(java.lang.String) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DURATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_YEAR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TRACK_NUMBER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_NUM_TRACKS, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISC_NUMBER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_BT_FOLDER_TYPE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ADVERTISEMENT, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DOWNLOAD_STATUS}"></val>
            <val name="open" val="true"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat.Builder android.support.v4.media.MediaMetadataCompat.Builder putBitmap(java.lang.String, android.graphics.Bitmap) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat.Builder android.support.v4.media.MediaMetadataCompat.Builder putLong(java.lang.String, long) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DURATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_YEAR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TRACK_NUMBER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_NUM_TRACKS, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISC_NUMBER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_BT_FOLDER_TYPE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ADVERTISEMENT, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DOWNLOAD_STATUS}"></val>
            <val name="open" val="true"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat.Builder android.support.v4.media.MediaMetadataCompat.Builder putRating(java.lang.String, android.support.v4.media.RatingCompat) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_USER_RATING, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_RATING}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat.Builder android.support.v4.media.MediaMetadataCompat.Builder putString(java.lang.String, java.lang.String) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_AUTHOR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_WRITER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPOSER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPILATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DATE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_GENRE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_DESCRIPTION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_ID, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_URI}"></val>
            <val name="open" val="true"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.MediaMetadataCompat.Builder android.support.v4.media.MediaMetadataCompat.Builder putText(java.lang.String, java.lang.CharSequence) 0">
        <annotation name="androidx.annotation.StringDef">
            <val name="value" val="{android.support.v4.media.MediaMetadataCompat.METADATA_KEY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_AUTHOR, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_WRITER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPOSER, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_COMPILATION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DATE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_GENRE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ARTIST, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_ALBUM_ART_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_DESCRIPTION, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON_URI, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_ID, android.support.v4.media.MediaMetadataCompat.METADATA_KEY_MEDIA_URI}"></val>
            <val name="open" val="true"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.RatingCompat RatingCompat(int, float) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.RatingCompat android.support.v4.media.RatingCompat newStarRating(int, float) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.RatingCompat android.support.v4.media.RatingCompat newUnratedRating(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.Callback void onRepeatModeChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.Callback void onShuffleModeChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.TransportControls void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.TransportControls void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.TransportControlsApi21 void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.TransportControlsApi21 void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.TransportControlsBase void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaControllerCompat.TransportControlsBase void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat void setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_QUEUE_COMMANDS}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat void setRatingType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.Callback void onSetRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.Callback void onSetShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImpl void setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_QUEUE_COMMANDS}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImpl void setRatingType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImpl void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImpl void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi21 void setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_QUEUE_COMMANDS}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi21 void setRatingType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi21 void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi21 void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplApi22 void setRatingType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase void setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS, android.support.v4.media.session.MediaSessionCompat.FLAG_HANDLES_QUEUE_COMMANDS}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase void setRatingType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.RatingCompat.RATING_NONE, android.support.v4.media.RatingCompat.RATING_HEART, android.support.v4.media.RatingCompat.RATING_THUMB_UP_DOWN, android.support.v4.media.RatingCompat.RATING_3_STARS, android.support.v4.media.RatingCompat.RATING_4_STARS, android.support.v4.media.RatingCompat.RATING_5_STARS, android.support.v4.media.RatingCompat.RATING_PERCENTAGE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ONE, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.REPEAT_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.MediaSessionCompat.MediaSessionImplBase void setShuffleMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_INVALID, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_NONE, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_ALL, android.support.v4.media.session.PlaybackStateCompat.SHUFFLE_MODE_GROUP}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.PlaybackStateCompat int toKeyCode(long) 0">
        <annotation name="androidx.annotation.LongDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.ACTION_STOP, android.support.v4.media.session.PlaybackStateCompat.ACTION_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY, android.support.v4.media.session.PlaybackStateCompat.ACTION_REWIND, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.ACTION_FAST_FORWARD, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_PAUSE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.PlaybackStateCompat.Builder android.support.v4.media.session.PlaybackStateCompat.Builder setActions(long) 0">
        <annotation name="androidx.annotation.LongDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.ACTION_STOP, android.support.v4.media.session.PlaybackStateCompat.ACTION_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY, android.support.v4.media.session.PlaybackStateCompat.ACTION_REWIND, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.ACTION_FAST_FORWARD, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_RATING, android.support.v4.media.session.PlaybackStateCompat.ACTION_SEEK_TO, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_MEDIA_ID, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_SEARCH, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_FROM_URI, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE_FROM_MEDIA_ID, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE_FROM_SEARCH, android.support.v4.media.session.PlaybackStateCompat.ACTION_PREPARE_FROM_URI, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_REPEAT_MODE, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_SHUFFLE_MODE, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_CAPTIONING_ENABLED, android.support.v4.media.session.PlaybackStateCompat.ACTION_SET_PLAYBACK_SPEED}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.PlaybackStateCompat.Builder android.support.v4.media.session.PlaybackStateCompat.Builder setErrorMessage(int, java.lang.CharSequence) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_UNKNOWN_ERROR, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_APP_ERROR, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_NOT_SUPPORTED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_AUTHENTICATION_EXPIRED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_CONCURRENT_STREAM_LIMIT, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_PARENTAL_CONTROL_RESTRICTED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_NOT_AVAILABLE_IN_REGION, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_CONTENT_ALREADY_PLAYING, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_SKIP_LIMIT_REACHED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_ACTION_ABORTED, android.support.v4.media.session.PlaybackStateCompat.ERROR_CODE_END_OF_QUEUE}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.PlaybackStateCompat.Builder android.support.v4.media.session.PlaybackStateCompat.Builder setState(int, long, float) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.STATE_NONE, android.support.v4.media.session.PlaybackStateCompat.STATE_STOPPED, android.support.v4.media.session.PlaybackStateCompat.STATE_PAUSED, android.support.v4.media.session.PlaybackStateCompat.STATE_PLAYING, android.support.v4.media.session.PlaybackStateCompat.STATE_FAST_FORWARDING, android.support.v4.media.session.PlaybackStateCompat.STATE_REWINDING, android.support.v4.media.session.PlaybackStateCompat.STATE_BUFFERING, android.support.v4.media.session.PlaybackStateCompat.STATE_ERROR, android.support.v4.media.session.PlaybackStateCompat.STATE_CONNECTING, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_QUEUE_ITEM}"></val>
        </annotation>
    </item>
    <item name="android.support.v4.media.session.PlaybackStateCompat.Builder android.support.v4.media.session.PlaybackStateCompat.Builder setState(int, long, float, long) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.STATE_NONE, android.support.v4.media.session.PlaybackStateCompat.STATE_STOPPED, android.support.v4.media.session.PlaybackStateCompat.STATE_PAUSED, android.support.v4.media.session.PlaybackStateCompat.STATE_PLAYING, android.support.v4.media.session.PlaybackStateCompat.STATE_FAST_FORWARDING, android.support.v4.media.session.PlaybackStateCompat.STATE_REWINDING, android.support.v4.media.session.PlaybackStateCompat.STATE_BUFFERING, android.support.v4.media.session.PlaybackStateCompat.STATE_ERROR, android.support.v4.media.session.PlaybackStateCompat.STATE_CONNECTING, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.STATE_SKIPPING_TO_QUEUE_ITEM}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesCompat int toVolumeStreamType(boolean, int, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.USAGE_UNKNOWN, androidx.media.AudioAttributesCompat.USAGE_MEDIA, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION_SIGNALLING, androidx.media.AudioAttributesCompat.USAGE_ALARM, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_RINGTONE, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_EVENT, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_SONIFICATION, androidx.media.AudioAttributesCompat.USAGE_GAME, androidx.media.AudioAttributesCompat.USAGE_ASSISTANT}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesCompat.Builder androidx.media.AudioAttributesCompat.Builder setContentType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.CONTENT_TYPE_UNKNOWN, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SPEECH, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MUSIC, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MOVIE, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SONIFICATION}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesCompat.Builder androidx.media.AudioAttributesCompat.Builder setUsage(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.USAGE_UNKNOWN, androidx.media.AudioAttributesCompat.USAGE_MEDIA, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION_SIGNALLING, androidx.media.AudioAttributesCompat.USAGE_ALARM, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_RINGTONE, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_EVENT, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_SONIFICATION, androidx.media.AudioAttributesCompat.USAGE_GAME, androidx.media.AudioAttributesCompat.USAGE_ASSISTANT}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesImpl.Builder androidx.media.AudioAttributesImpl.Builder setContentType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.CONTENT_TYPE_UNKNOWN, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SPEECH, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MUSIC, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MOVIE, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SONIFICATION}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesImpl.Builder androidx.media.AudioAttributesImpl.Builder setUsage(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.USAGE_UNKNOWN, androidx.media.AudioAttributesCompat.USAGE_MEDIA, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION_SIGNALLING, androidx.media.AudioAttributesCompat.USAGE_ALARM, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_RINGTONE, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_EVENT, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_SONIFICATION, androidx.media.AudioAttributesCompat.USAGE_GAME, androidx.media.AudioAttributesCompat.USAGE_ASSISTANT}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesImplBase.Builder androidx.media.AudioAttributesImplBase.Builder setContentType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.CONTENT_TYPE_UNKNOWN, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SPEECH, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MUSIC, androidx.media.AudioAttributesCompat.CONTENT_TYPE_MOVIE, androidx.media.AudioAttributesCompat.CONTENT_TYPE_SONIFICATION}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioAttributesImplBase.Builder androidx.media.AudioAttributesImplBase.Builder setUsage(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioAttributesCompat.USAGE_UNKNOWN, androidx.media.AudioAttributesCompat.USAGE_MEDIA, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION, androidx.media.AudioAttributesCompat.USAGE_VOICE_COMMUNICATION_SIGNALLING, androidx.media.AudioAttributesCompat.USAGE_ALARM, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_RINGTONE, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media.AudioAttributesCompat.USAGE_NOTIFICATION_EVENT, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media.AudioAttributesCompat.USAGE_ASSISTANCE_SONIFICATION, androidx.media.AudioAttributesCompat.USAGE_GAME, androidx.media.AudioAttributesCompat.USAGE_ASSISTANT}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioFocusRequestCompat.Builder Builder(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioFocusRequestCompat.Builder androidx.media.AudioFocusRequestCompat.Builder setFocusGain(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE}"></val>
        </annotation>
    </item>
    <item name="androidx.media.AudioFocusRequestCompat.Builder boolean isValidFocusGain(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK, androidx.media.AudioManagerCompat.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE}"></val>
        </annotation>
    </item>
    <item name="androidx.media.MediaBrowserServiceCompat.Result void setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media.MediaBrowserServiceCompat.RESULT_FLAG_OPTION_NOT_HANDLED, androidx.media.MediaBrowserServiceCompat.RESULT_FLAG_ON_LOAD_ITEM_NOT_IMPLEMENTED, androidx.media.MediaBrowserServiceCompat.RESULT_FLAG_ON_SEARCH_NOT_IMPLEMENTED}"></val>
        </annotation>
    </item>
    <item name="androidx.media.VolumeProviderCompat VolumeProviderCompat(int, int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.VolumeProviderCompat.VOLUME_CONTROL_FIXED, androidx.media.VolumeProviderCompat.VOLUME_CONTROL_RELATIVE, androidx.media.VolumeProviderCompat.VOLUME_CONTROL_ABSOLUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media.VolumeProviderCompat VolumeProviderCompat(int, int, int, java.lang.String) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media.VolumeProviderCompat.VOLUME_CONTROL_FIXED, androidx.media.VolumeProviderCompat.VOLUME_CONTROL_RELATIVE, androidx.media.VolumeProviderCompat.VOLUME_CONTROL_ABSOLUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media.session.MediaButtonReceiver android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context, android.content.ComponentName, long) 2">
        <annotation name="androidx.annotation.LongDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.ACTION_STOP, android.support.v4.media.session.PlaybackStateCompat.ACTION_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY, android.support.v4.media.session.PlaybackStateCompat.ACTION_REWIND, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.ACTION_FAST_FORWARD, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_PAUSE}"></val>
        </annotation>
    </item>
    <item name="androidx.media.session.MediaButtonReceiver android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context, long) 1">
        <annotation name="androidx.annotation.LongDef">
            <val name="value" val="{android.support.v4.media.session.PlaybackStateCompat.ACTION_STOP, android.support.v4.media.session.PlaybackStateCompat.ACTION_PAUSE, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY, android.support.v4.media.session.PlaybackStateCompat.ACTION_REWIND, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS, android.support.v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_NEXT, android.support.v4.media.session.PlaybackStateCompat.ACTION_FAST_FORWARD, android.support.v4.media.session.PlaybackStateCompat.ACTION_PLAY_PAUSE}"></val>
        </annotation>
    </item>
</root>
