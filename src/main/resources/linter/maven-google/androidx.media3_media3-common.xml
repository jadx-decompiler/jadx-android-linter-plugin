<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
    <item name="androidx.media3.common.AdOverlayInfo AdOverlayInfo(android.view.View, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.AdOverlayInfo.PURPOSE_CONTROLS, androidx.media3.common.AdOverlayInfo.PURPOSE_CLOSE_AD, androidx.media3.common.AdOverlayInfo.PURPOSE_OTHER, androidx.media3.common.AdOverlayInfo.PURPOSE_NOT_VISIBLE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AdOverlayInfo AdOverlayInfo(android.view.View, int, java.lang.String) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.AdOverlayInfo.PURPOSE_CONTROLS, androidx.media3.common.AdOverlayInfo.PURPOSE_CLOSE_AD, androidx.media3.common.AdOverlayInfo.PURPOSE_OTHER, androidx.media3.common.AdOverlayInfo.PURPOSE_NOT_VISIBLE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AdOverlayInfo.Builder Builder(android.view.View, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.AdOverlayInfo.PURPOSE_CONTROLS, androidx.media3.common.AdOverlayInfo.PURPOSE_CLOSE_AD, androidx.media3.common.AdOverlayInfo.PURPOSE_OTHER, androidx.media3.common.AdOverlayInfo.PURPOSE_NOT_VISIBLE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AdPlaybackState.AdGroup AdGroup(long, int, int, int[], androidx.media3.common.MediaItem[], long[], long, boolean) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.AdPlaybackState.AD_STATE_UNAVAILABLE, androidx.media3.common.AdPlaybackState.AD_STATE_AVAILABLE, androidx.media3.common.AdPlaybackState.AD_STATE_SKIPPED, androidx.media3.common.AdPlaybackState.AD_STATE_PLAYED, androidx.media3.common.AdPlaybackState.AD_STATE_ERROR}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AdPlaybackState.AdGroup androidx.media3.common.AdPlaybackState.AdGroup withAdState(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.AdPlaybackState.AD_STATE_UNAVAILABLE, androidx.media3.common.AdPlaybackState.AD_STATE_AVAILABLE, androidx.media3.common.AdPlaybackState.AD_STATE_SKIPPED, androidx.media3.common.AdPlaybackState.AD_STATE_PLAYED, androidx.media3.common.AdPlaybackState.AD_STATE_ERROR}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AdPlaybackState.AdGroup int[] copyStatesWithSpaceForAdCount(int[], int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.AdPlaybackState.AD_STATE_UNAVAILABLE, androidx.media3.common.AdPlaybackState.AD_STATE_AVAILABLE, androidx.media3.common.AdPlaybackState.AD_STATE_SKIPPED, androidx.media3.common.AdPlaybackState.AD_STATE_PLAYED, androidx.media3.common.AdPlaybackState.AD_STATE_ERROR}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes AudioAttributes(int, int, int, int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.AUDIO_CONTENT_TYPE_MOVIE, androidx.media3.common.C.AUDIO_CONTENT_TYPE_MUSIC, androidx.media3.common.C.AUDIO_CONTENT_TYPE_SONIFICATION, androidx.media3.common.C.AUDIO_CONTENT_TYPE_SPEECH, androidx.media3.common.C.AUDIO_CONTENT_TYPE_UNKNOWN}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes AudioAttributes(int, int, int, int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.FLAG_AUDIBILITY_ENFORCED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes AudioAttributes(int, int, int, int, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.USAGE_ALARM, androidx.media3.common.C.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media3.common.C.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media3.common.C.USAGE_ASSISTANCE_SONIFICATION, androidx.media3.common.C.USAGE_ASSISTANT, androidx.media3.common.C.USAGE_GAME, androidx.media3.common.C.USAGE_MEDIA, androidx.media3.common.C.USAGE_NOTIFICATION, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media3.common.C.USAGE_NOTIFICATION_EVENT, androidx.media3.common.C.USAGE_NOTIFICATION_RINGTONE, androidx.media3.common.C.USAGE_UNKNOWN, androidx.media3.common.C.USAGE_VOICE_COMMUNICATION, androidx.media3.common.C.USAGE_VOICE_COMMUNICATION_SIGNALLING}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes AudioAttributes(int, int, int, int, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.ALLOW_CAPTURE_BY_ALL, androidx.media3.common.C.ALLOW_CAPTURE_BY_NONE, androidx.media3.common.C.ALLOW_CAPTURE_BY_SYSTEM}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes AudioAttributes(int, int, int, int, int) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.SPATIALIZATION_BEHAVIOR_AUTO, androidx.media3.common.C.SPATIALIZATION_BEHAVIOR_NEVER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Api29 void setAllowedCapturePolicy(android.media.AudioAttributes.Builder, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.ALLOW_CAPTURE_BY_ALL, androidx.media3.common.C.ALLOW_CAPTURE_BY_NONE, androidx.media3.common.C.ALLOW_CAPTURE_BY_SYSTEM}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Api32 void setSpatializationBehavior(android.media.AudioAttributes.Builder, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.SPATIALIZATION_BEHAVIOR_AUTO, androidx.media3.common.C.SPATIALIZATION_BEHAVIOR_NEVER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Builder androidx.media3.common.AudioAttributes.Builder setAllowedCapturePolicy(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.ALLOW_CAPTURE_BY_ALL, androidx.media3.common.C.ALLOW_CAPTURE_BY_NONE, androidx.media3.common.C.ALLOW_CAPTURE_BY_SYSTEM}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Builder androidx.media3.common.AudioAttributes.Builder setContentType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.AUDIO_CONTENT_TYPE_MOVIE, androidx.media3.common.C.AUDIO_CONTENT_TYPE_MUSIC, androidx.media3.common.C.AUDIO_CONTENT_TYPE_SONIFICATION, androidx.media3.common.C.AUDIO_CONTENT_TYPE_SPEECH, androidx.media3.common.C.AUDIO_CONTENT_TYPE_UNKNOWN}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Builder androidx.media3.common.AudioAttributes.Builder setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.FLAG_AUDIBILITY_ENFORCED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Builder androidx.media3.common.AudioAttributes.Builder setSpatializationBehavior(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.SPATIALIZATION_BEHAVIOR_AUTO, androidx.media3.common.C.SPATIALIZATION_BEHAVIOR_NEVER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.AudioAttributes.Builder androidx.media3.common.AudioAttributes.Builder setUsage(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.USAGE_ALARM, androidx.media3.common.C.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media3.common.C.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media3.common.C.USAGE_ASSISTANCE_SONIFICATION, androidx.media3.common.C.USAGE_ASSISTANT, androidx.media3.common.C.USAGE_GAME, androidx.media3.common.C.USAGE_MEDIA, androidx.media3.common.C.USAGE_NOTIFICATION, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media3.common.C.USAGE_NOTIFICATION_EVENT, androidx.media3.common.C.USAGE_NOTIFICATION_RINGTONE, androidx.media3.common.C.USAGE_UNKNOWN, androidx.media3.common.C.USAGE_VOICE_COMMUNICATION, androidx.media3.common.C.USAGE_VOICE_COMMUNICATION_SIGNALLING}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer boolean isCommandAvailable(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void ignoreSeek(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void repeatCurrentMediaItem(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void seekTo(int, long, int, boolean) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void seekToCurrentItem(long, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void seekToDefaultPositionInternal(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void seekToNextMediaItemInternal(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void seekToOffset(long, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.BasePlayer void seekToPreviousMediaItemInternal(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.C java.lang.String getFormatSupportString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.FORMAT_HANDLED, androidx.media3.common.C.FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.C.FORMAT_UNSUPPORTED_DRM, androidx.media3.common.C.FORMAT_UNSUPPORTED_SUBTYPE, androidx.media3.common.C.FORMAT_UNSUPPORTED_TYPE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo ColorInfo(int, int, int, byte[], int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_SPACE_BT601, androidx.media3.common.C.COLOR_SPACE_BT709, androidx.media3.common.C.COLOR_SPACE_BT2020}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo ColorInfo(int, int, int, byte[], int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_RANGE_LIMITED, androidx.media3.common.C.COLOR_RANGE_FULL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo ColorInfo(int, int, int, byte[], int, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_TRANSFER_LINEAR, androidx.media3.common.C.COLOR_TRANSFER_SDR, androidx.media3.common.C.COLOR_TRANSFER_SRGB, androidx.media3.common.C.COLOR_TRANSFER_GAMMA_2_2, androidx.media3.common.C.COLOR_TRANSFER_ST2084, androidx.media3.common.C.COLOR_TRANSFER_HLG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo java.lang.String colorRangeToString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_RANGE_LIMITED, androidx.media3.common.C.COLOR_RANGE_FULL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo java.lang.String colorSpaceToString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_SPACE_BT601, androidx.media3.common.C.COLOR_SPACE_BT709, androidx.media3.common.C.COLOR_SPACE_BT2020}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo java.lang.String colorTransferToString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_TRANSFER_LINEAR, androidx.media3.common.C.COLOR_TRANSFER_SDR, androidx.media3.common.C.COLOR_TRANSFER_SRGB, androidx.media3.common.C.COLOR_TRANSFER_GAMMA_2_2, androidx.media3.common.C.COLOR_TRANSFER_ST2084, androidx.media3.common.C.COLOR_TRANSFER_HLG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo.Builder androidx.media3.common.ColorInfo.Builder setColorRange(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_RANGE_LIMITED, androidx.media3.common.C.COLOR_RANGE_FULL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo.Builder androidx.media3.common.ColorInfo.Builder setColorSpace(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_SPACE_BT601, androidx.media3.common.C.COLOR_SPACE_BT709, androidx.media3.common.C.COLOR_SPACE_BT2020}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ColorInfo.Builder androidx.media3.common.ColorInfo.Builder setColorTransfer(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_TRANSFER_LINEAR, androidx.media3.common.C.COLOR_TRANSFER_SDR, androidx.media3.common.C.COLOR_TRANSFER_SRGB, androidx.media3.common.C.COLOR_TRANSFER_GAMMA_2_2, androidx.media3.common.C.COLOR_TRANSFER_ST2084, androidx.media3.common.C.COLOR_TRANSFER_HLG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.DeviceInfo DeviceInfo(int, int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.DeviceInfo.PLAYBACK_TYPE_LOCAL, androidx.media3.common.DeviceInfo.PLAYBACK_TYPE_REMOTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.DeviceInfo.Builder Builder(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.DeviceInfo.PLAYBACK_TYPE_LOCAL, androidx.media3.common.DeviceInfo.PLAYBACK_TYPE_REMOTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format androidx.media3.common.Format copyWithCryptoType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.CRYPTO_TYPE_UNSUPPORTED, androidx.media3.common.C.CRYPTO_TYPE_NONE, androidx.media3.common.C.CRYPTO_TYPE_FRAMEWORK}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setAuxiliaryTrackType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.AUXILIARY_TRACK_TYPE_UNDEFINED, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_ORIGINAL, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_DEPTH_LINEAR, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_DEPTH_INVERSE, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_DEPTH_METADATA}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setCryptoType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.CRYPTO_TYPE_UNSUPPORTED, androidx.media3.common.C.CRYPTO_TYPE_NONE, androidx.media3.common.C.CRYPTO_TYPE_FRAMEWORK}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setCueReplacementBehavior(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.CUE_REPLACEMENT_BEHAVIOR_MERGE, androidx.media3.common.Format.CUE_REPLACEMENT_BEHAVIOR_REPLACE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setPcmEncoding(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setRoleFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setSelectionFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.SELECTION_FLAG_DEFAULT, androidx.media3.common.C.SELECTION_FLAG_FORCED, androidx.media3.common.C.SELECTION_FLAG_AUTOSELECT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Format.Builder androidx.media3.common.Format.Builder setStereoMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.STEREO_MODE_MONO, androidx.media3.common.C.STEREO_MODE_TOP_BOTTOM, androidx.media3.common.C.STEREO_MODE_LEFT_RIGHT, androidx.media3.common.C.STEREO_MODE_STEREO_MESH, androidx.media3.common.C.STEREO_MODE_INTERLEAVED_LEFT_PRIMARY, androidx.media3.common.C.STEREO_MODE_INTERLEAVED_RIGHT_PRIMARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer boolean isCommandAvailable(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer void decreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer void increaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer void setDeviceMuted(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer void setDeviceVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onMediaItemTransition(androidx.media3.common.MediaItem, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_REPEAT, androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_AUTO, androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_SEEK, androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_PLAYLIST_CHANGED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onPlayWhenReadyChanged(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_REMOTE, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_SUPPRESSED_TOO_LONG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onPlaybackStateChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.STATE_IDLE, androidx.media3.common.Player.STATE_BUFFERING, androidx.media3.common.Player.STATE_READY, androidx.media3.common.Player.STATE_ENDED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onPlaybackSuppressionReasonChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_REMOTE, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_SUPPRESSED_TOO_LONG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onPlayerStateChanged(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.STATE_IDLE, androidx.media3.common.Player.STATE_BUFFERING, androidx.media3.common.Player.STATE_READY, androidx.media3.common.Player.STATE_ENDED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onPositionDiscontinuity(androidx.media3.common.Player.PositionInfo, androidx.media3.common.Player.PositionInfo, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.DISCONTINUITY_REASON_AUTO_TRANSITION, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK_ADJUSTMENT, androidx.media3.common.Player.DISCONTINUITY_REASON_SKIP, androidx.media3.common.Player.DISCONTINUITY_REASON_REMOVE, androidx.media3.common.Player.DISCONTINUITY_REASON_INTERNAL, androidx.media3.common.Player.DISCONTINUITY_REASON_SILENCE_SKIP}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onPositionDiscontinuity(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.DISCONTINUITY_REASON_AUTO_TRANSITION, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK_ADJUSTMENT, androidx.media3.common.Player.DISCONTINUITY_REASON_SKIP, androidx.media3.common.Player.DISCONTINUITY_REASON_REMOVE, androidx.media3.common.Player.DISCONTINUITY_REASON_INTERNAL, androidx.media3.common.Player.DISCONTINUITY_REASON_SILENCE_SKIP}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onRepeatModeChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingPlayer.ForwardingListener void onTimelineChanged(androidx.media3.common.Timeline, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED, androidx.media3.common.Player.TIMELINE_CHANGE_REASON_SOURCE_UPDATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingSimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleDecreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingSimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleIncreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingSimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleSeek(int, long, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingSimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleSetDeviceMuted(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ForwardingSimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleSetRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.GlObjectsProvider android.opengl.EGLSurface createEglSurface(android.opengl.EGLDisplay, java.lang.Object, int, boolean) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_TRANSFER_LINEAR, androidx.media3.common.C.COLOR_TRANSFER_SDR, androidx.media3.common.C.COLOR_TRANSFER_SRGB, androidx.media3.common.C.COLOR_TRANSFER_GAMMA_2_2, androidx.media3.common.C.COLOR_TRANSFER_ST2084, androidx.media3.common.C.COLOR_TRANSFER_HLG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaItem.Subtitle Subtitle(android.net.Uri, java.lang.String, java.lang.String, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.SELECTION_FLAG_DEFAULT, androidx.media3.common.C.SELECTION_FLAG_FORCED, androidx.media3.common.C.SELECTION_FLAG_AUTOSELECT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaItem.Subtitle Subtitle(android.net.Uri, java.lang.String, java.lang.String, int, int, java.lang.String) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.SELECTION_FLAG_DEFAULT, androidx.media3.common.C.SELECTION_FLAG_FORCED, androidx.media3.common.C.SELECTION_FLAG_AUTOSELECT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaItem.Subtitle Subtitle(android.net.Uri, java.lang.String, java.lang.String, int, int, java.lang.String) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaItem.SubtitleConfiguration.Builder androidx.media3.common.MediaItem.SubtitleConfiguration.Builder setRoleFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaItem.SubtitleConfiguration.Builder androidx.media3.common.MediaItem.SubtitleConfiguration.Builder setSelectionFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.SELECTION_FLAG_DEFAULT, androidx.media3.common.C.SELECTION_FLAG_FORCED, androidx.media3.common.C.SELECTION_FLAG_AUTOSELECT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaMetadata int getFolderTypeFromMediaType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.MediaMetadata.MEDIA_TYPE_MIXED, androidx.media3.common.MediaMetadata.MEDIA_TYPE_MUSIC, androidx.media3.common.MediaMetadata.MEDIA_TYPE_AUDIO_BOOK_CHAPTER, androidx.media3.common.MediaMetadata.MEDIA_TYPE_PODCAST_EPISODE, androidx.media3.common.MediaMetadata.MEDIA_TYPE_RADIO_STATION, androidx.media3.common.MediaMetadata.MEDIA_TYPE_NEWS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_VIDEO, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TRAILER, androidx.media3.common.MediaMetadata.MEDIA_TYPE_MOVIE, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_SHOW, androidx.media3.common.MediaMetadata.MEDIA_TYPE_ALBUM, androidx.media3.common.MediaMetadata.MEDIA_TYPE_ARTIST, androidx.media3.common.MediaMetadata.MEDIA_TYPE_GENRE, androidx.media3.common.MediaMetadata.MEDIA_TYPE_PLAYLIST, androidx.media3.common.MediaMetadata.MEDIA_TYPE_YEAR, androidx.media3.common.MediaMetadata.MEDIA_TYPE_AUDIO_BOOK, androidx.media3.common.MediaMetadata.MEDIA_TYPE_PODCAST, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_CHANNEL, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_SERIES, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_SEASON, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_MIXED, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_ALBUMS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_ARTISTS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_GENRES, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_PLAYLISTS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_YEARS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_AUDIO_BOOKS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_PODCASTS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TV_CHANNELS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TV_SERIES, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TV_SHOWS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_RADIO_STATIONS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_NEWS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_VIDEOS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TRAILERS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_MOVIES}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaMetadata int getMediaTypeFromFolderType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.MediaMetadata.FOLDER_TYPE_NONE, androidx.media3.common.MediaMetadata.FOLDER_TYPE_MIXED, androidx.media3.common.MediaMetadata.FOLDER_TYPE_TITLES, androidx.media3.common.MediaMetadata.FOLDER_TYPE_ALBUMS, androidx.media3.common.MediaMetadata.FOLDER_TYPE_ARTISTS, androidx.media3.common.MediaMetadata.FOLDER_TYPE_GENRES, androidx.media3.common.MediaMetadata.FOLDER_TYPE_PLAYLISTS, androidx.media3.common.MediaMetadata.FOLDER_TYPE_YEARS}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaMetadata.Builder androidx.media3.common.MediaMetadata.Builder maybeSetArtworkData(byte[], int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.MediaMetadata.PICTURE_TYPE_OTHER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_FILE_ICON, androidx.media3.common.MediaMetadata.PICTURE_TYPE_FILE_ICON_OTHER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_FRONT_COVER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_BACK_COVER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_LEAFLET_PAGE, androidx.media3.common.MediaMetadata.PICTURE_TYPE_MEDIA, androidx.media3.common.MediaMetadata.PICTURE_TYPE_LEAD_ARTIST_PERFORMER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_ARTIST_PERFORMER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_CONDUCTOR, androidx.media3.common.MediaMetadata.PICTURE_TYPE_BAND_ORCHESTRA, androidx.media3.common.MediaMetadata.PICTURE_TYPE_COMPOSER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_LYRICIST, androidx.media3.common.MediaMetadata.PICTURE_TYPE_RECORDING_LOCATION, androidx.media3.common.MediaMetadata.PICTURE_TYPE_DURING_RECORDING, androidx.media3.common.MediaMetadata.PICTURE_TYPE_DURING_PERFORMANCE, androidx.media3.common.MediaMetadata.PICTURE_TYPE_MOVIE_VIDEO_SCREEN_CAPTURE, androidx.media3.common.MediaMetadata.PICTURE_TYPE_A_BRIGHT_COLORED_FISH, androidx.media3.common.MediaMetadata.PICTURE_TYPE_ILLUSTRATION, androidx.media3.common.MediaMetadata.PICTURE_TYPE_BAND_ARTIST_LOGO, androidx.media3.common.MediaMetadata.PICTURE_TYPE_PUBLISHER_STUDIO_LOGO}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaMetadata.Builder androidx.media3.common.MediaMetadata.Builder setArtworkData(byte[], java.lang.Integer) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.MediaMetadata.PICTURE_TYPE_OTHER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_FILE_ICON, androidx.media3.common.MediaMetadata.PICTURE_TYPE_FILE_ICON_OTHER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_FRONT_COVER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_BACK_COVER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_LEAFLET_PAGE, androidx.media3.common.MediaMetadata.PICTURE_TYPE_MEDIA, androidx.media3.common.MediaMetadata.PICTURE_TYPE_LEAD_ARTIST_PERFORMER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_ARTIST_PERFORMER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_CONDUCTOR, androidx.media3.common.MediaMetadata.PICTURE_TYPE_BAND_ORCHESTRA, androidx.media3.common.MediaMetadata.PICTURE_TYPE_COMPOSER, androidx.media3.common.MediaMetadata.PICTURE_TYPE_LYRICIST, androidx.media3.common.MediaMetadata.PICTURE_TYPE_RECORDING_LOCATION, androidx.media3.common.MediaMetadata.PICTURE_TYPE_DURING_RECORDING, androidx.media3.common.MediaMetadata.PICTURE_TYPE_DURING_PERFORMANCE, androidx.media3.common.MediaMetadata.PICTURE_TYPE_MOVIE_VIDEO_SCREEN_CAPTURE, androidx.media3.common.MediaMetadata.PICTURE_TYPE_A_BRIGHT_COLORED_FISH, androidx.media3.common.MediaMetadata.PICTURE_TYPE_ILLUSTRATION, androidx.media3.common.MediaMetadata.PICTURE_TYPE_BAND_ARTIST_LOGO, androidx.media3.common.MediaMetadata.PICTURE_TYPE_PUBLISHER_STUDIO_LOGO}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaMetadata.Builder androidx.media3.common.MediaMetadata.Builder setFolderType(java.lang.Integer) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.MediaMetadata.FOLDER_TYPE_NONE, androidx.media3.common.MediaMetadata.FOLDER_TYPE_MIXED, androidx.media3.common.MediaMetadata.FOLDER_TYPE_TITLES, androidx.media3.common.MediaMetadata.FOLDER_TYPE_ALBUMS, androidx.media3.common.MediaMetadata.FOLDER_TYPE_ARTISTS, androidx.media3.common.MediaMetadata.FOLDER_TYPE_GENRES, androidx.media3.common.MediaMetadata.FOLDER_TYPE_PLAYLISTS, androidx.media3.common.MediaMetadata.FOLDER_TYPE_YEARS}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MediaMetadata.Builder androidx.media3.common.MediaMetadata.Builder setMediaType(java.lang.Integer) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.MediaMetadata.MEDIA_TYPE_MIXED, androidx.media3.common.MediaMetadata.MEDIA_TYPE_MUSIC, androidx.media3.common.MediaMetadata.MEDIA_TYPE_AUDIO_BOOK_CHAPTER, androidx.media3.common.MediaMetadata.MEDIA_TYPE_PODCAST_EPISODE, androidx.media3.common.MediaMetadata.MEDIA_TYPE_RADIO_STATION, androidx.media3.common.MediaMetadata.MEDIA_TYPE_NEWS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_VIDEO, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TRAILER, androidx.media3.common.MediaMetadata.MEDIA_TYPE_MOVIE, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_SHOW, androidx.media3.common.MediaMetadata.MEDIA_TYPE_ALBUM, androidx.media3.common.MediaMetadata.MEDIA_TYPE_ARTIST, androidx.media3.common.MediaMetadata.MEDIA_TYPE_GENRE, androidx.media3.common.MediaMetadata.MEDIA_TYPE_PLAYLIST, androidx.media3.common.MediaMetadata.MEDIA_TYPE_YEAR, androidx.media3.common.MediaMetadata.MEDIA_TYPE_AUDIO_BOOK, androidx.media3.common.MediaMetadata.MEDIA_TYPE_PODCAST, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_CHANNEL, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_SERIES, androidx.media3.common.MediaMetadata.MEDIA_TYPE_TV_SEASON, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_MIXED, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_ALBUMS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_ARTISTS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_GENRES, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_PLAYLISTS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_YEARS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_AUDIO_BOOKS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_PODCASTS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TV_CHANNELS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TV_SERIES, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TV_SHOWS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_RADIO_STATIONS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_NEWS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_VIDEOS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_TRAILERS, androidx.media3.common.MediaMetadata.MEDIA_TYPE_FOLDER_MOVIES}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MimeTypes void registerCustomMimeType(java.lang.String, java.lang.String, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.MimeTypes.CustomMimeType CustomMimeType(java.lang.String, java.lang.String, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.ParserException ParserException(java.lang.String, java.lang.Throwable, boolean, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.DATA_TYPE_UNKNOWN, androidx.media3.common.C.DATA_TYPE_MEDIA, androidx.media3.common.C.DATA_TYPE_MEDIA_INITIALIZATION, androidx.media3.common.C.DATA_TYPE_DRM, androidx.media3.common.C.DATA_TYPE_MANIFEST, androidx.media3.common.C.DATA_TYPE_TIME_SYNCHRONIZATION, androidx.media3.common.C.DATA_TYPE_AD, androidx.media3.common.C.DATA_TYPE_MEDIA_PROGRESSIVE_LIVE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PlaybackException PlaybackException(java.lang.String, java.lang.Throwable, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.PlaybackException.ERROR_CODE_INVALID_STATE, androidx.media3.common.PlaybackException.ERROR_CODE_BAD_VALUE, androidx.media3.common.PlaybackException.ERROR_CODE_PERMISSION_DENIED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_SUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DISCONNECTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUTHENTICATION_EXPIRED, androidx.media3.common.PlaybackException.ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_CONCURRENT_STREAM_LIMIT, androidx.media3.common.PlaybackException.ERROR_CODE_PARENTAL_CONTROL_RESTRICTED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_AVAILABLE_IN_REGION, androidx.media3.common.PlaybackException.ERROR_CODE_SKIP_LIMIT_REACHED, androidx.media3.common.PlaybackException.ERROR_CODE_SETUP_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_END_OF_PLAYLIST, androidx.media3.common.PlaybackException.ERROR_CODE_CONTENT_ALREADY_PLAYING, androidx.media3.common.PlaybackException.ERROR_CODE_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_REMOTE_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_BEHIND_LIVE_WINDOW, androidx.media3.common.PlaybackException.ERROR_CODE_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_FAILED_RUNTIME_CHECK, androidx.media3.common.PlaybackException.ERROR_CODE_IO_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_IO_INVALID_HTTP_CONTENT_TYPE, androidx.media3.common.PlaybackException.ERROR_CODE_IO_BAD_HTTP_STATUS, androidx.media3.common.PlaybackException.ERROR_CODE_IO_FILE_NOT_FOUND, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NO_PERMISSION, androidx.media3.common.PlaybackException.ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_QUERY_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SCHEME_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_PROVISIONING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_CONTENT_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_ACQUISITION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DISALLOWED_OPERATION, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SYSTEM_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DEVICE_REVOKED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_EXPIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PlaybackException PlaybackException(java.lang.String, java.lang.Throwable, int, android.os.Bundle) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.PlaybackException.ERROR_CODE_INVALID_STATE, androidx.media3.common.PlaybackException.ERROR_CODE_BAD_VALUE, androidx.media3.common.PlaybackException.ERROR_CODE_PERMISSION_DENIED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_SUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DISCONNECTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUTHENTICATION_EXPIRED, androidx.media3.common.PlaybackException.ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_CONCURRENT_STREAM_LIMIT, androidx.media3.common.PlaybackException.ERROR_CODE_PARENTAL_CONTROL_RESTRICTED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_AVAILABLE_IN_REGION, androidx.media3.common.PlaybackException.ERROR_CODE_SKIP_LIMIT_REACHED, androidx.media3.common.PlaybackException.ERROR_CODE_SETUP_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_END_OF_PLAYLIST, androidx.media3.common.PlaybackException.ERROR_CODE_CONTENT_ALREADY_PLAYING, androidx.media3.common.PlaybackException.ERROR_CODE_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_REMOTE_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_BEHIND_LIVE_WINDOW, androidx.media3.common.PlaybackException.ERROR_CODE_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_FAILED_RUNTIME_CHECK, androidx.media3.common.PlaybackException.ERROR_CODE_IO_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_IO_INVALID_HTTP_CONTENT_TYPE, androidx.media3.common.PlaybackException.ERROR_CODE_IO_BAD_HTTP_STATUS, androidx.media3.common.PlaybackException.ERROR_CODE_IO_FILE_NOT_FOUND, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NO_PERMISSION, androidx.media3.common.PlaybackException.ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_QUERY_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SCHEME_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_PROVISIONING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_CONTENT_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_ACQUISITION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DISALLOWED_OPERATION, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SYSTEM_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DEVICE_REVOKED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_EXPIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PlaybackException PlaybackException(java.lang.String, java.lang.Throwable, int, android.os.Bundle, long) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.PlaybackException.ERROR_CODE_INVALID_STATE, androidx.media3.common.PlaybackException.ERROR_CODE_BAD_VALUE, androidx.media3.common.PlaybackException.ERROR_CODE_PERMISSION_DENIED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_SUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DISCONNECTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUTHENTICATION_EXPIRED, androidx.media3.common.PlaybackException.ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_CONCURRENT_STREAM_LIMIT, androidx.media3.common.PlaybackException.ERROR_CODE_PARENTAL_CONTROL_RESTRICTED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_AVAILABLE_IN_REGION, androidx.media3.common.PlaybackException.ERROR_CODE_SKIP_LIMIT_REACHED, androidx.media3.common.PlaybackException.ERROR_CODE_SETUP_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_END_OF_PLAYLIST, androidx.media3.common.PlaybackException.ERROR_CODE_CONTENT_ALREADY_PLAYING, androidx.media3.common.PlaybackException.ERROR_CODE_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_REMOTE_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_BEHIND_LIVE_WINDOW, androidx.media3.common.PlaybackException.ERROR_CODE_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_FAILED_RUNTIME_CHECK, androidx.media3.common.PlaybackException.ERROR_CODE_IO_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_IO_INVALID_HTTP_CONTENT_TYPE, androidx.media3.common.PlaybackException.ERROR_CODE_IO_BAD_HTTP_STATUS, androidx.media3.common.PlaybackException.ERROR_CODE_IO_FILE_NOT_FOUND, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NO_PERMISSION, androidx.media3.common.PlaybackException.ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_QUERY_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SCHEME_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_PROVISIONING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_CONTENT_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_ACQUISITION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DISALLOWED_OPERATION, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SYSTEM_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DEVICE_REVOKED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_EXPIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PlaybackException java.lang.String getErrorCodeName(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.PlaybackException.ERROR_CODE_INVALID_STATE, androidx.media3.common.PlaybackException.ERROR_CODE_BAD_VALUE, androidx.media3.common.PlaybackException.ERROR_CODE_PERMISSION_DENIED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_SUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DISCONNECTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUTHENTICATION_EXPIRED, androidx.media3.common.PlaybackException.ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_CONCURRENT_STREAM_LIMIT, androidx.media3.common.PlaybackException.ERROR_CODE_PARENTAL_CONTROL_RESTRICTED, androidx.media3.common.PlaybackException.ERROR_CODE_NOT_AVAILABLE_IN_REGION, androidx.media3.common.PlaybackException.ERROR_CODE_SKIP_LIMIT_REACHED, androidx.media3.common.PlaybackException.ERROR_CODE_SETUP_REQUIRED, androidx.media3.common.PlaybackException.ERROR_CODE_END_OF_PLAYLIST, androidx.media3.common.PlaybackException.ERROR_CODE_CONTENT_ALREADY_PLAYING, androidx.media3.common.PlaybackException.ERROR_CODE_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_REMOTE_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_BEHIND_LIVE_WINDOW, androidx.media3.common.PlaybackException.ERROR_CODE_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_FAILED_RUNTIME_CHECK, androidx.media3.common.PlaybackException.ERROR_CODE_IO_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NETWORK_CONNECTION_TIMEOUT, androidx.media3.common.PlaybackException.ERROR_CODE_IO_INVALID_HTTP_CONTENT_TYPE, androidx.media3.common.PlaybackException.ERROR_CODE_IO_BAD_HTTP_STATUS, androidx.media3.common.PlaybackException.ERROR_CODE_IO_FILE_NOT_FOUND, androidx.media3.common.PlaybackException.ERROR_CODE_IO_NO_PERMISSION, androidx.media3.common.PlaybackException.ERROR_CODE_IO_CLEARTEXT_NOT_PERMITTED, androidx.media3.common.PlaybackException.ERROR_CODE_IO_READ_POSITION_OUT_OF_RANGE, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_MALFORMED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_CONTAINER_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_PARSING_MANIFEST_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODER_QUERY_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.PlaybackException.ERROR_CODE_DECODING_FORMAT_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_INIT_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_AUDIO_TRACK_OFFLOAD_WRITE_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_UNSPECIFIED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SCHEME_UNSUPPORTED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_PROVISIONING_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_CONTENT_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_ACQUISITION_FAILED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DISALLOWED_OPERATION, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_SYSTEM_ERROR, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_DEVICE_REVOKED, androidx.media3.common.PlaybackException.ERROR_CODE_DRM_LICENSE_EXPIRED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player boolean isCommandAvailable(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player void decreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player void increaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player void setDeviceMuted(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player void setDeviceVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands boolean contains(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands boolean containsAny(int...) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands.Builder androidx.media3.common.Player.Commands.Builder add(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands.Builder androidx.media3.common.Player.Commands.Builder addAll(int...) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands.Builder androidx.media3.common.Player.Commands.Builder addIf(int, boolean) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands.Builder androidx.media3.common.Player.Commands.Builder remove(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands.Builder androidx.media3.common.Player.Commands.Builder removeAll(int...) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Commands.Builder androidx.media3.common.Player.Commands.Builder removeIf(int, boolean) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Events boolean contains(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.EVENT_TIMELINE_CHANGED, androidx.media3.common.Player.EVENT_MEDIA_ITEM_TRANSITION, androidx.media3.common.Player.EVENT_TRACKS_CHANGED, androidx.media3.common.Player.EVENT_IS_LOADING_CHANGED, androidx.media3.common.Player.EVENT_PLAYBACK_STATE_CHANGED, androidx.media3.common.Player.EVENT_PLAY_WHEN_READY_CHANGED, androidx.media3.common.Player.EVENT_PLAYBACK_SUPPRESSION_REASON_CHANGED, androidx.media3.common.Player.EVENT_IS_PLAYING_CHANGED, androidx.media3.common.Player.EVENT_REPEAT_MODE_CHANGED, androidx.media3.common.Player.EVENT_SHUFFLE_MODE_ENABLED_CHANGED, androidx.media3.common.Player.EVENT_PLAYER_ERROR, androidx.media3.common.Player.EVENT_POSITION_DISCONTINUITY, androidx.media3.common.Player.EVENT_PLAYBACK_PARAMETERS_CHANGED, androidx.media3.common.Player.EVENT_AVAILABLE_COMMANDS_CHANGED, androidx.media3.common.Player.EVENT_MEDIA_METADATA_CHANGED, androidx.media3.common.Player.EVENT_PLAYLIST_METADATA_CHANGED, androidx.media3.common.Player.EVENT_SEEK_BACK_INCREMENT_CHANGED, androidx.media3.common.Player.EVENT_SEEK_FORWARD_INCREMENT_CHANGED, androidx.media3.common.Player.EVENT_MAX_SEEK_TO_PREVIOUS_POSITION_CHANGED, androidx.media3.common.Player.EVENT_TRACK_SELECTION_PARAMETERS_CHANGED, androidx.media3.common.Player.EVENT_AUDIO_ATTRIBUTES_CHANGED, androidx.media3.common.Player.EVENT_AUDIO_SESSION_ID, androidx.media3.common.Player.EVENT_VOLUME_CHANGED, androidx.media3.common.Player.EVENT_SKIP_SILENCE_ENABLED_CHANGED, androidx.media3.common.Player.EVENT_SURFACE_SIZE_CHANGED, androidx.media3.common.Player.EVENT_VIDEO_SIZE_CHANGED, androidx.media3.common.Player.EVENT_RENDERED_FIRST_FRAME, androidx.media3.common.Player.EVENT_CUES, androidx.media3.common.Player.EVENT_METADATA, androidx.media3.common.Player.EVENT_DEVICE_INFO_CHANGED, androidx.media3.common.Player.EVENT_DEVICE_VOLUME_CHANGED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Events boolean containsAny(int...) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.EVENT_TIMELINE_CHANGED, androidx.media3.common.Player.EVENT_MEDIA_ITEM_TRANSITION, androidx.media3.common.Player.EVENT_TRACKS_CHANGED, androidx.media3.common.Player.EVENT_IS_LOADING_CHANGED, androidx.media3.common.Player.EVENT_PLAYBACK_STATE_CHANGED, androidx.media3.common.Player.EVENT_PLAY_WHEN_READY_CHANGED, androidx.media3.common.Player.EVENT_PLAYBACK_SUPPRESSION_REASON_CHANGED, androidx.media3.common.Player.EVENT_IS_PLAYING_CHANGED, androidx.media3.common.Player.EVENT_REPEAT_MODE_CHANGED, androidx.media3.common.Player.EVENT_SHUFFLE_MODE_ENABLED_CHANGED, androidx.media3.common.Player.EVENT_PLAYER_ERROR, androidx.media3.common.Player.EVENT_POSITION_DISCONTINUITY, androidx.media3.common.Player.EVENT_PLAYBACK_PARAMETERS_CHANGED, androidx.media3.common.Player.EVENT_AVAILABLE_COMMANDS_CHANGED, androidx.media3.common.Player.EVENT_MEDIA_METADATA_CHANGED, androidx.media3.common.Player.EVENT_PLAYLIST_METADATA_CHANGED, androidx.media3.common.Player.EVENT_SEEK_BACK_INCREMENT_CHANGED, androidx.media3.common.Player.EVENT_SEEK_FORWARD_INCREMENT_CHANGED, androidx.media3.common.Player.EVENT_MAX_SEEK_TO_PREVIOUS_POSITION_CHANGED, androidx.media3.common.Player.EVENT_TRACK_SELECTION_PARAMETERS_CHANGED, androidx.media3.common.Player.EVENT_AUDIO_ATTRIBUTES_CHANGED, androidx.media3.common.Player.EVENT_AUDIO_SESSION_ID, androidx.media3.common.Player.EVENT_VOLUME_CHANGED, androidx.media3.common.Player.EVENT_SKIP_SILENCE_ENABLED_CHANGED, androidx.media3.common.Player.EVENT_SURFACE_SIZE_CHANGED, androidx.media3.common.Player.EVENT_VIDEO_SIZE_CHANGED, androidx.media3.common.Player.EVENT_RENDERED_FIRST_FRAME, androidx.media3.common.Player.EVENT_CUES, androidx.media3.common.Player.EVENT_METADATA, androidx.media3.common.Player.EVENT_DEVICE_INFO_CHANGED, androidx.media3.common.Player.EVENT_DEVICE_VOLUME_CHANGED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onMediaItemTransition(androidx.media3.common.MediaItem, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_REPEAT, androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_AUTO, androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_SEEK, androidx.media3.common.Player.MEDIA_ITEM_TRANSITION_REASON_PLAYLIST_CHANGED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onPlayWhenReadyChanged(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_REMOTE, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_SUPPRESSED_TOO_LONG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onPlaybackStateChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.STATE_IDLE, androidx.media3.common.Player.STATE_BUFFERING, androidx.media3.common.Player.STATE_READY, androidx.media3.common.Player.STATE_ENDED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onPlaybackSuppressionReasonChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_NONE, androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_TRANSIENT_AUDIO_FOCUS_LOSS, androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_ROUTE, androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_OUTPUT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onPlayerStateChanged(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.STATE_IDLE, androidx.media3.common.Player.STATE_BUFFERING, androidx.media3.common.Player.STATE_READY, androidx.media3.common.Player.STATE_ENDED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onPositionDiscontinuity(androidx.media3.common.Player.PositionInfo, androidx.media3.common.Player.PositionInfo, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.DISCONTINUITY_REASON_AUTO_TRANSITION, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK_ADJUSTMENT, androidx.media3.common.Player.DISCONTINUITY_REASON_SKIP, androidx.media3.common.Player.DISCONTINUITY_REASON_REMOVE, androidx.media3.common.Player.DISCONTINUITY_REASON_INTERNAL, androidx.media3.common.Player.DISCONTINUITY_REASON_SILENCE_SKIP}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onPositionDiscontinuity(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.DISCONTINUITY_REASON_AUTO_TRANSITION, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK_ADJUSTMENT, androidx.media3.common.Player.DISCONTINUITY_REASON_SKIP, androidx.media3.common.Player.DISCONTINUITY_REASON_REMOVE, androidx.media3.common.Player.DISCONTINUITY_REASON_INTERNAL, androidx.media3.common.Player.DISCONTINUITY_REASON_SILENCE_SKIP}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onRepeatModeChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Player.Listener void onTimelineChanged(androidx.media3.common.Timeline, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED, androidx.media3.common.Player.TIMELINE_CHANGE_REASON_SOURCE_UPDATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager boolean proceedNonBlocking(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager void add(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager void proceed(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager void proceedOrThrow(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager void remove(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager.PriorityTooLowException PriorityTooLowException(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.PriorityTaskManager.PriorityTooLowException PriorityTooLowException(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.PRIORITY_MAX, androidx.media3.common.C.PRIORITY_PLAYBACK, androidx.media3.common.C.PRIORITY_DOWNLOAD, androidx.media3.common.C.PRIORITY_PLAYBACK_PRELOAD, androidx.media3.common.C.PRIORITY_PROCESSING_BACKGROUND, androidx.media3.common.C.PRIORITY_PROCESSING_FOREGROUND}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer boolean shouldHandleCommand(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleDecreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleIncreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleSeek(int, long, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleSetDeviceMuted(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer com.google.common.util.concurrent.ListenableFuture&lt;?&gt; handleSetRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer void decreaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer void increaseDeviceVolume(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer void seekTo(int, long, int, boolean) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.COMMAND_INVALID, androidx.media3.common.Player.COMMAND_PLAY_PAUSE, androidx.media3.common.Player.COMMAND_PREPARE, androidx.media3.common.Player.COMMAND_STOP, androidx.media3.common.Player.COMMAND_SEEK_TO_DEFAULT_POSITION, androidx.media3.common.Player.COMMAND_SEEK_IN_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_PREVIOUS, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_TO_NEXT, androidx.media3.common.Player.COMMAND_SEEK_TO_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_SEEK_BACK, androidx.media3.common.Player.COMMAND_SEEK_FORWARD, androidx.media3.common.Player.COMMAND_SET_SPEED_AND_PITCH, androidx.media3.common.Player.COMMAND_SET_SHUFFLE_MODE, androidx.media3.common.Player.COMMAND_SET_REPEAT_MODE, androidx.media3.common.Player.COMMAND_GET_CURRENT_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_GET_TIMELINE, androidx.media3.common.Player.COMMAND_GET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_GET_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEMS_METADATA, androidx.media3.common.Player.COMMAND_SET_PLAYLIST_METADATA, androidx.media3.common.Player.COMMAND_SET_MEDIA_ITEM, androidx.media3.common.Player.COMMAND_CHANGE_MEDIA_ITEMS, androidx.media3.common.Player.COMMAND_GET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_GET_VOLUME, androidx.media3.common.Player.COMMAND_GET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_SET_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME, androidx.media3.common.Player.COMMAND_ADJUST_DEVICE_VOLUME_WITH_FLAGS, androidx.media3.common.Player.COMMAND_SET_AUDIO_ATTRIBUTES, androidx.media3.common.Player.COMMAND_SET_VIDEO_SURFACE, androidx.media3.common.Player.COMMAND_GET_TEXT, androidx.media3.common.Player.COMMAND_SET_TRACK_SELECTION_PARAMETERS, androidx.media3.common.Player.COMMAND_GET_TRACKS, androidx.media3.common.Player.COMMAND_RELEASE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer void setDeviceMuted(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer void setDeviceVolume(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.VOLUME_FLAG_SHOW_UI, androidx.media3.common.C.VOLUME_FLAG_ALLOW_RINGER_MODES, androidx.media3.common.C.VOLUME_FLAG_PLAY_SOUND, androidx.media3.common.C.VOLUME_FLAG_REMOVE_SOUND_AND_VIBRATE, androidx.media3.common.C.VOLUME_FLAG_VIBRATE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer void setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer.State.Builder androidx.media3.common.SimpleBasePlayer.State.Builder setPlayWhenReady(boolean, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_REMOTE, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM, androidx.media3.common.Player.PLAY_WHEN_READY_CHANGE_REASON_SUPPRESSED_TOO_LONG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer.State.Builder androidx.media3.common.SimpleBasePlayer.State.Builder setPlaybackState(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.STATE_IDLE, androidx.media3.common.Player.STATE_BUFFERING, androidx.media3.common.Player.STATE_READY, androidx.media3.common.Player.STATE_ENDED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer.State.Builder androidx.media3.common.SimpleBasePlayer.State.Builder setPlaybackSuppressionReason(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_NONE, androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_TRANSIENT_AUDIO_FOCUS_LOSS, androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_ROUTE, androidx.media3.common.Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_OUTPUT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer.State.Builder androidx.media3.common.SimpleBasePlayer.State.Builder setPositionDiscontinuity(int, long) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.DISCONTINUITY_REASON_AUTO_TRANSITION, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK, androidx.media3.common.Player.DISCONTINUITY_REASON_SEEK_ADJUSTMENT, androidx.media3.common.Player.DISCONTINUITY_REASON_SKIP, androidx.media3.common.Player.DISCONTINUITY_REASON_REMOVE, androidx.media3.common.Player.DISCONTINUITY_REASON_INTERNAL, androidx.media3.common.Player.DISCONTINUITY_REASON_SILENCE_SKIP}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.SimpleBasePlayer.State.Builder androidx.media3.common.SimpleBasePlayer.State.Builder setRepeatMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Timeline boolean isLastPeriod(int, androidx.media3.common.Timeline.Period, androidx.media3.common.Timeline.Window, int, boolean) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Timeline int getNextPeriodIndex(int, androidx.media3.common.Timeline.Period, androidx.media3.common.Timeline.Window, int, boolean) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Timeline int getNextWindowIndex(int, int, boolean) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Timeline int getPreviousWindowIndex(int, int, boolean) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Timeline.RemotableTimeline int getNextWindowIndex(int, int, boolean) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Timeline.RemotableTimeline int getPreviousWindowIndex(int, int, boolean) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackGroup int normalizeRoleFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.AudioOffloadPreferences.Builder androidx.media3.common.TrackSelectionParameters.AudioOffloadPreferences.Builder setAudioOffloadMode(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.TrackSelectionParameters.AudioOffloadPreferences.AUDIO_OFFLOAD_MODE_REQUIRED, androidx.media3.common.TrackSelectionParameters.AudioOffloadPreferences.AUDIO_OFFLOAD_MODE_ENABLED, androidx.media3.common.TrackSelectionParameters.AudioOffloadPreferences.AUDIO_OFFLOAD_MODE_DISABLED}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.Builder androidx.media3.common.TrackSelectionParameters.Builder clearOverridesOfType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.Builder androidx.media3.common.TrackSelectionParameters.Builder setIgnoredTextSelectionFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.SELECTION_FLAG_DEFAULT, androidx.media3.common.C.SELECTION_FLAG_FORCED, androidx.media3.common.C.SELECTION_FLAG_AUTOSELECT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.Builder androidx.media3.common.TrackSelectionParameters.Builder setPreferredAudioRoleFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.Builder androidx.media3.common.TrackSelectionParameters.Builder setPreferredTextRoleFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.Builder androidx.media3.common.TrackSelectionParameters.Builder setPreferredVideoRoleFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.TrackSelectionParameters.Builder androidx.media3.common.TrackSelectionParameters.Builder setTrackTypeDisabled(int, boolean) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks boolean containsType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks boolean isTypeSelected(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks boolean isTypeSupported(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks boolean isTypeSupported(int, boolean) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks boolean isTypeSupportedOrEmpty(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks boolean isTypeSupportedOrEmpty(int, boolean) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.Tracks.Group Group(androidx.media3.common.TrackGroup, boolean, int[], boolean[]) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.FORMAT_HANDLED, androidx.media3.common.C.FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.C.FORMAT_UNSUPPORTED_DRM, androidx.media3.common.C.FORMAT_UNSUPPORTED_SUBTYPE, androidx.media3.common.C.FORMAT_UNSUPPORTED_TYPE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.VideoFrameProcessor void registerInputStream(int, java.util.List&lt;androidx.media3.common.Effect&gt;, androidx.media3.common.FrameInfo) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_SURFACE, androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_BITMAP, androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_TEXTURE_ID, androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_SURFACE_AUTOMATIC_FRAME_REGISTRATION}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.VideoFrameProcessor.Listener void onInputStreamRegistered(int, java.util.List&lt;androidx.media3.common.Effect&gt;, androidx.media3.common.FrameInfo) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_SURFACE, androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_BITMAP, androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_TEXTURE_ID, androidx.media3.common.VideoFrameProcessor.INPUT_TYPE_SURFACE_AUTOMATIC_FRAME_REGISTRATION}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.audio.AudioProcessor.AudioFormat AudioFormat(int, int, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue Cue(java.lang.CharSequence, android.text.Layout.Alignment, android.text.Layout.Alignment, android.graphics.Bitmap, float, int, int, float, int, int, float, float, float, boolean, int, int, float) 15">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.VERTICAL_TYPE_RL, androidx.media3.common.text.Cue.VERTICAL_TYPE_LR}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue Cue(java.lang.CharSequence, android.text.Layout.Alignment, android.text.Layout.Alignment, android.graphics.Bitmap, float, int, int, float, int, int, float, float, float, boolean, int, int, float) 5">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.LINE_TYPE_FRACTION, androidx.media3.common.text.Cue.LINE_TYPE_NUMBER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue Cue(java.lang.CharSequence, android.text.Layout.Alignment, android.text.Layout.Alignment, android.graphics.Bitmap, float, int, int, float, int, int, float, float, float, boolean, int, int, float) 6">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.ANCHOR_TYPE_START, androidx.media3.common.text.Cue.ANCHOR_TYPE_MIDDLE, androidx.media3.common.text.Cue.ANCHOR_TYPE_END}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue Cue(java.lang.CharSequence, android.text.Layout.Alignment, android.text.Layout.Alignment, android.graphics.Bitmap, float, int, int, float, int, int, float, float, float, boolean, int, int, float) 8">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.ANCHOR_TYPE_START, androidx.media3.common.text.Cue.ANCHOR_TYPE_MIDDLE, androidx.media3.common.text.Cue.ANCHOR_TYPE_END}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue Cue(java.lang.CharSequence, android.text.Layout.Alignment, android.text.Layout.Alignment, android.graphics.Bitmap, float, int, int, float, int, int, float, float, float, boolean, int, int, float) 9">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.TEXT_SIZE_TYPE_FRACTIONAL, androidx.media3.common.text.Cue.TEXT_SIZE_TYPE_FRACTIONAL_IGNORE_PADDING, androidx.media3.common.text.Cue.TEXT_SIZE_TYPE_ABSOLUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue.Builder androidx.media3.common.text.Cue.Builder setLine(float, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.LINE_TYPE_FRACTION, androidx.media3.common.text.Cue.LINE_TYPE_NUMBER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue.Builder androidx.media3.common.text.Cue.Builder setLineAnchor(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.ANCHOR_TYPE_START, androidx.media3.common.text.Cue.ANCHOR_TYPE_MIDDLE, androidx.media3.common.text.Cue.ANCHOR_TYPE_END}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue.Builder androidx.media3.common.text.Cue.Builder setPositionAnchor(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.ANCHOR_TYPE_START, androidx.media3.common.text.Cue.ANCHOR_TYPE_MIDDLE, androidx.media3.common.text.Cue.ANCHOR_TYPE_END}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue.Builder androidx.media3.common.text.Cue.Builder setTextSize(float, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.TEXT_SIZE_TYPE_FRACTIONAL, androidx.media3.common.text.Cue.TEXT_SIZE_TYPE_FRACTIONAL_IGNORE_PADDING, androidx.media3.common.text.Cue.TEXT_SIZE_TYPE_ABSOLUTE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.Cue.Builder androidx.media3.common.text.Cue.Builder setVerticalType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.Cue.TYPE_UNSET, androidx.media3.common.text.Cue.VERTICAL_TYPE_RL, androidx.media3.common.text.Cue.VERTICAL_TYPE_LR}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.CustomSpanBundler android.os.Bundle spanToBundle(android.text.Spanned, java.lang.Object, int, android.os.Bundle) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.CustomSpanBundler.UNKNOWN, androidx.media3.common.text.CustomSpanBundler.RUBY, androidx.media3.common.text.CustomSpanBundler.TEXT_EMPHASIS, androidx.media3.common.text.CustomSpanBundler.HORIZONTAL_TEXT_IN_VERTICAL_CONTEXT, androidx.media3.common.text.CustomSpanBundler.VOICE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.RubySpan RubySpan(java.lang.String, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.TextAnnotation.POSITION_UNKNOWN, androidx.media3.common.text.TextAnnotation.POSITION_BEFORE, androidx.media3.common.text.TextAnnotation.POSITION_AFTER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.TextEmphasisSpan TextEmphasisSpan(int, int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.TextEmphasisSpan.MARK_SHAPE_NONE, androidx.media3.common.text.TextEmphasisSpan.MARK_SHAPE_CIRCLE, androidx.media3.common.text.TextEmphasisSpan.MARK_SHAPE_DOT, androidx.media3.common.text.TextEmphasisSpan.MARK_SHAPE_SESAME}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.TextEmphasisSpan TextEmphasisSpan(int, int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.TextEmphasisSpan.MARK_FILL_UNKNOWN, androidx.media3.common.text.TextEmphasisSpan.MARK_FILL_FILLED, androidx.media3.common.text.TextEmphasisSpan.MARK_FILL_OPEN}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.text.TextEmphasisSpan TextEmphasisSpan(int, int, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.text.TextAnnotation.POSITION_UNKNOWN, androidx.media3.common.text.TextAnnotation.POSITION_BEFORE, androidx.media3.common.text.TextAnnotation.POSITION_AFTER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.EGLSurfaceTexture android.opengl.EGLContext createEGLContext(android.opengl.EGLDisplay, android.opengl.EGLConfig, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_NONE, androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_SURFACELESS_CONTEXT, androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_PROTECTED_PBUFFER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.EGLSurfaceTexture android.opengl.EGLSurface createEGLSurface(android.opengl.EGLDisplay, android.opengl.EGLConfig, android.opengl.EGLContext, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_NONE, androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_SURFACELESS_CONTEXT, androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_PROTECTED_PBUFFER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.EGLSurfaceTexture void init(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_NONE, androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_SURFACELESS_CONTEXT, androidx.media3.common.util.EGLSurfaceTexture.SECURE_MODE_PROTECTED_PBUFFER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.GlUtil android.opengl.EGLSurface createEglSurface(android.opengl.EGLDisplay, java.lang.Object, int, boolean) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.COLOR_TRANSFER_LINEAR, androidx.media3.common.C.COLOR_TRANSFER_SDR, androidx.media3.common.C.COLOR_TRANSFER_SRGB, androidx.media3.common.C.COLOR_TRANSFER_GAMMA_2_2, androidx.media3.common.C.COLOR_TRANSFER_ST2084, androidx.media3.common.C.COLOR_TRANSFER_HLG}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Log void setLogLevel(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.util.Log.LOG_LEVEL_ALL, androidx.media3.common.util.Log.LOG_LEVEL_INFO, androidx.media3.common.util.Log.LOG_LEVEL_WARNING, androidx.media3.common.util.Log.LOG_LEVEL_ERROR, androidx.media3.common.util.Log.LOG_LEVEL_OFF}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.MediaFormatUtil void maybeSetPcmEncoding(android.media.MediaFormat, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.NetworkTypeObserver void updateNetworkType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.NETWORK_TYPE_UNKNOWN, androidx.media3.common.C.NETWORK_TYPE_OFFLINE, androidx.media3.common.C.NETWORK_TYPE_WIFI, androidx.media3.common.C.NETWORK_TYPE_2G, androidx.media3.common.C.NETWORK_TYPE_3G, androidx.media3.common.C.NETWORK_TYPE_4G, androidx.media3.common.C.NETWORK_TYPE_5G_SA, androidx.media3.common.C.NETWORK_TYPE_5G_NSA, androidx.media3.common.C.NETWORK_TYPE_CELLULAR_UNKNOWN, androidx.media3.common.C.NETWORK_TYPE_ETHERNET, androidx.media3.common.C.NETWORK_TYPE_OTHER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.NetworkTypeObserver.Listener void onNetworkTypeChanged(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.NETWORK_TYPE_UNKNOWN, androidx.media3.common.C.NETWORK_TYPE_OFFLINE, androidx.media3.common.C.NETWORK_TYPE_WIFI, androidx.media3.common.C.NETWORK_TYPE_2G, androidx.media3.common.C.NETWORK_TYPE_3G, androidx.media3.common.C.NETWORK_TYPE_4G, androidx.media3.common.C.NETWORK_TYPE_5G_SA, androidx.media3.common.C.NETWORK_TYPE_5G_NSA, androidx.media3.common.C.NETWORK_TYPE_CELLULAR_UNKNOWN, androidx.media3.common.C.NETWORK_TYPE_ETHERNET, androidx.media3.common.C.NETWORK_TYPE_OTHER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.NotificationUtil void createNotificationChannel(android.content.Context, java.lang.String, int, int, int) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.util.NotificationUtil.IMPORTANCE_UNSPECIFIED, androidx.media3.common.util.NotificationUtil.IMPORTANCE_NONE, androidx.media3.common.util.NotificationUtil.IMPORTANCE_MIN, androidx.media3.common.util.NotificationUtil.IMPORTANCE_LOW, androidx.media3.common.util.NotificationUtil.IMPORTANCE_DEFAULT, androidx.media3.common.util.NotificationUtil.IMPORTANCE_HIGH}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.RepeatModeUtil boolean isRepeatModeEnabled(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.RepeatModeUtil int getNextRepeatMode(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Player.REPEAT_MODE_OFF, androidx.media3.common.Player.REPEAT_MODE_ONE, androidx.media3.common.Player.REPEAT_MODE_ALL}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util androidx.media3.common.Format getPcmFormat(int, int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util boolean isEncodingHighResolutionPcm(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util boolean isEncodingLinearPcm(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT, androidx.media3.common.C.ENCODING_MP3, androidx.media3.common.C.ENCODING_AAC_LC, androidx.media3.common.C.ENCODING_AAC_HE_V1, androidx.media3.common.C.ENCODING_AAC_HE_V2, androidx.media3.common.C.ENCODING_AAC_XHE, androidx.media3.common.C.ENCODING_AAC_ELD, androidx.media3.common.C.ENCODING_AAC_ER_BSAC, androidx.media3.common.C.ENCODING_AC3, androidx.media3.common.C.ENCODING_E_AC3, androidx.media3.common.C.ENCODING_E_AC3_JOC, androidx.media3.common.C.ENCODING_AC4, androidx.media3.common.C.ENCODING_DTS, androidx.media3.common.C.ENCODING_DTS_HD, androidx.media3.common.C.ENCODING_DOLBY_TRUEHD, androidx.media3.common.C.ENCODING_OPUS, androidx.media3.common.C.ENCODING_DTS_UHD_P2}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util int getAudioContentTypeForStreamType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.STREAM_TYPE_ALARM, androidx.media3.common.C.STREAM_TYPE_DTMF, androidx.media3.common.C.STREAM_TYPE_MUSIC, androidx.media3.common.C.STREAM_TYPE_NOTIFICATION, androidx.media3.common.C.STREAM_TYPE_RING, androidx.media3.common.C.STREAM_TYPE_SYSTEM, androidx.media3.common.C.STREAM_TYPE_VOICE_CALL, androidx.media3.common.C.STREAM_TYPE_DEFAULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util int getAudioUsageForStreamType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.STREAM_TYPE_ALARM, androidx.media3.common.C.STREAM_TYPE_DTMF, androidx.media3.common.C.STREAM_TYPE_MUSIC, androidx.media3.common.C.STREAM_TYPE_NOTIFICATION, androidx.media3.common.C.STREAM_TYPE_RING, androidx.media3.common.C.STREAM_TYPE_SYSTEM, androidx.media3.common.C.STREAM_TYPE_VOICE_CALL, androidx.media3.common.C.STREAM_TYPE_DEFAULT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util int getByteDepth(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util int getCodecCountOfType(java.lang.String, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util int getPcmFrameSize(int, int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.Format.NO_VALUE, androidx.media3.common.C.ENCODING_INVALID, androidx.media3.common.C.ENCODING_PCM_8BIT, androidx.media3.common.C.ENCODING_PCM_16BIT, androidx.media3.common.C.ENCODING_PCM_16BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_24BIT, androidx.media3.common.C.ENCODING_PCM_24BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_32BIT, androidx.media3.common.C.ENCODING_PCM_32BIT_BIG_ENDIAN, androidx.media3.common.C.ENCODING_PCM_FLOAT}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util int getStreamTypeForAudioUsage(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.USAGE_ALARM, androidx.media3.common.C.USAGE_ASSISTANCE_ACCESSIBILITY, androidx.media3.common.C.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, androidx.media3.common.C.USAGE_ASSISTANCE_SONIFICATION, androidx.media3.common.C.USAGE_ASSISTANT, androidx.media3.common.C.USAGE_GAME, androidx.media3.common.C.USAGE_MEDIA, androidx.media3.common.C.USAGE_NOTIFICATION, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, androidx.media3.common.C.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, androidx.media3.common.C.USAGE_NOTIFICATION_EVENT, androidx.media3.common.C.USAGE_NOTIFICATION_RINGTONE, androidx.media3.common.C.USAGE_UNKNOWN, androidx.media3.common.C.USAGE_VOICE_COMMUNICATION, androidx.media3.common.C.USAGE_VOICE_COMMUNICATION_SIGNALLING}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.lang.String getAdaptiveMimeTypeForContentType(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.CONTENT_TYPE_DASH, androidx.media3.common.C.CONTENT_TYPE_SS, androidx.media3.common.C.CONTENT_TYPE_HLS, androidx.media3.common.C.CONTENT_TYPE_RTSP, androidx.media3.common.C.CONTENT_TYPE_OTHER}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.lang.String getAuxiliaryTrackTypeString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.AUXILIARY_TRACK_TYPE_UNDEFINED, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_ORIGINAL, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_DEPTH_LINEAR, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_DEPTH_INVERSE, androidx.media3.common.C.AUXILIARY_TRACK_TYPE_DEPTH_METADATA}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.lang.String getCodecsOfType(java.lang.String, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.lang.String getFormatSupportString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.media3.common.C.FORMAT_HANDLED, androidx.media3.common.C.FORMAT_EXCEEDS_CAPABILITIES, androidx.media3.common.C.FORMAT_UNSUPPORTED_DRM, androidx.media3.common.C.FORMAT_UNSUPPORTED_SUBTYPE, androidx.media3.common.C.FORMAT_UNSUPPORTED_TYPE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.lang.String getTrackTypeString(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="open" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.TRACK_TYPE_UNKNOWN, androidx.media3.common.C.TRACK_TYPE_DEFAULT, androidx.media3.common.C.TRACK_TYPE_AUDIO, androidx.media3.common.C.TRACK_TYPE_VIDEO, androidx.media3.common.C.TRACK_TYPE_TEXT, androidx.media3.common.C.TRACK_TYPE_IMAGE, androidx.media3.common.C.TRACK_TYPE_METADATA, androidx.media3.common.C.TRACK_TYPE_CAMERA_MOTION, androidx.media3.common.C.TRACK_TYPE_NONE}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.util.List&lt;java.lang.String&gt; getRoleFlagStrings(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.ROLE_FLAG_MAIN, androidx.media3.common.C.ROLE_FLAG_ALTERNATE, androidx.media3.common.C.ROLE_FLAG_SUPPLEMENTARY, androidx.media3.common.C.ROLE_FLAG_COMMENTARY, androidx.media3.common.C.ROLE_FLAG_DUB, androidx.media3.common.C.ROLE_FLAG_EMERGENCY, androidx.media3.common.C.ROLE_FLAG_CAPTION, androidx.media3.common.C.ROLE_FLAG_SUBTITLE, androidx.media3.common.C.ROLE_FLAG_SIGN, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_VIDEO, androidx.media3.common.C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND, androidx.media3.common.C.ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY, androidx.media3.common.C.ROLE_FLAG_TRANSCRIBES_DIALOG, androidx.media3.common.C.ROLE_FLAG_EASY_TO_READ, androidx.media3.common.C.ROLE_FLAG_TRICK_PLAY, androidx.media3.common.C.ROLE_FLAG_AUXILIARY}"></val>
        </annotation>
    </item>
    <item name="androidx.media3.common.util.Util java.util.List&lt;java.lang.String&gt; getSelectionFlagStrings(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{androidx.media3.common.C.SELECTION_FLAG_DEFAULT, androidx.media3.common.C.SELECTION_FLAG_FORCED, androidx.media3.common.C.SELECTION_FLAG_AUTOSELECT}"></val>
        </annotation>
    </item>
</root>
