<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, byte[], long, long, long, java.lang.String, int) 6">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, int, byte[], long, long, long, java.lang.String, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_GET, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_POST, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_HEAD}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, int, byte[], long, long, long, java.lang.String, int) 7">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, int, byte[], long, long, long, java.lang.String, int, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_GET, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_POST, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_HEAD}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, int, byte[], long, long, long, java.lang.String, int, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 7">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, long, int, byte[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, long, long, java.lang.String, int, java.lang.Object) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_GET, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_POST, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_HEAD}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, long, int, byte[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, long, long, java.lang.String, int, java.lang.Object) 8">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, long, long, java.lang.String, int) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, long, long, java.lang.String, int, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec DataSpec(android.net.Uri, long, long, long, java.lang.String, int) 5">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec boolean isFlagSet(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec java.lang.String getStringForHttpMethod(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_GET, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_POST, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_HEAD}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec.Builder com.google.android.exoplayer2.upstream.DataSpec.Builder setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_GZIP, com.google.android.exoplayer2.upstream.DataSpec.FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN, com.google.android.exoplayer2.upstream.DataSpec.FLAG_ALLOW_CACHE_FRAGMENTATION, com.google.android.exoplayer2.upstream.DataSpec.FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DataSpec.Builder com.google.android.exoplayer2.upstream.DataSpec.Builder setHttpMethod(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_GET, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_POST, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_HEAD}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.DefaultHttpDataSource java.net.HttpURLConnection makeConnection(java.net.URL, int, byte[], long, long, boolean, boolean, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_GET, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_POST, com.google.android.exoplayer2.upstream.DataSpec.HTTP_METHOD_HEAD}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(com.google.android.exoplayer2.upstream.DataSpec, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(com.google.android.exoplayer2.upstream.DataSpec, int, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(java.io.IOException, com.google.android.exoplayer2.upstream.DataSpec, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(java.io.IOException, com.google.android.exoplayer2.upstream.DataSpec, int, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(java.lang.String, com.google.android.exoplayer2.upstream.DataSpec, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(java.lang.String, com.google.android.exoplayer2.upstream.DataSpec, int, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(java.lang.String, java.io.IOException, com.google.android.exoplayer2.upstream.DataSpec, int) 3">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException HttpDataSourceException(java.lang.String, java.io.IOException, com.google.android.exoplayer2.upstream.DataSpec, int, int) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException createForIOException(java.io.IOException, com.google.android.exoplayer2.upstream.DataSpec, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException int assignErrorCode(int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_OPEN, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_READ, com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.TYPE_CLOSE}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource CacheDataSource(com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSink, com.google.android.exoplayer2.upstream.cache.CacheKeyFactory, int, com.google.android.exoplayer2.util.PriorityTaskManager, int, com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener) 5">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_BLOCK_ON_CACHE, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource CacheDataSource(com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSink, int, com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_BLOCK_ON_CACHE, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource CacheDataSource(com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSink, int, com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener, com.google.android.exoplayer2.upstream.cache.CacheKeyFactory) 4">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_BLOCK_ON_CACHE, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource CacheDataSource(com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.DataSource, int) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_BLOCK_ON_CACHE, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource void notifyCacheIgnored(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.CACHE_IGNORED_REASON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.CACHE_IGNORED_REASON_UNSET_LENGTH}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener void onCacheIgnored(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.CACHE_IGNORED_REASON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.CACHE_IGNORED_REASON_UNSET_LENGTH}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory com.google.android.exoplayer2.upstream.cache.CacheDataSource createDataSourceInternal(com.google.android.exoplayer2.upstream.DataSource, int, int) 1">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_BLOCK_ON_CACHE, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}"></val>
        </annotation>
    </item>
    <item name="com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory setFlags(int) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="flag" val="true"></val>
            <val name="value" val="{com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_BLOCK_ON_CACHE, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR, com.google.android.exoplayer2.upstream.cache.CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}"></val>
        </annotation>
    </item>
</root>
