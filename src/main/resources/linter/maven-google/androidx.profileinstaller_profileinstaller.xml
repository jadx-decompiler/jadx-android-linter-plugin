<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
    <item name="androidx.profileinstaller.DeviceProfileWriter void result(int, java.lang.Object) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.profileinstaller.ProfileInstaller.RESULT_INSTALL_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_ALREADY_INSTALLED, androidx.profileinstaller.ProfileInstaller.RESULT_UNSUPPORTED_ART_VERSION, androidx.profileinstaller.ProfileInstaller.RESULT_NOT_WRITABLE, androidx.profileinstaller.ProfileInstaller.RESULT_DESIRED_FORMAT_UNSUPPORTED, androidx.profileinstaller.ProfileInstaller.RESULT_BASELINE_PROFILE_NOT_FOUND, androidx.profileinstaller.ProfileInstaller.RESULT_IO_EXCEPTION, androidx.profileinstaller.ProfileInstaller.RESULT_PARSE_EXCEPTION, androidx.profileinstaller.ProfileInstaller.RESULT_META_FILE_REQUIRED_BUT_NOT_FOUND, androidx.profileinstaller.ProfileInstaller.RESULT_INSTALL_SKIP_FILE_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_DELETE_SKIP_FILE_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_SAVE_PROFILE_SIGNALLED, androidx.profileinstaller.ProfileInstaller.RESULT_SAVE_PROFILE_SKIPPED, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_FAILURE, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_UNKNOWN}"></val>
        </annotation>
    </item>
    <item name="androidx.profileinstaller.ProfileInstaller void diagnostic(java.util.concurrent.Executor, androidx.profileinstaller.ProfileInstaller.DiagnosticsCallback, int, java.lang.Object) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_CURRENT_PROFILE_EXISTS, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_CURRENT_PROFILE_DOES_NOT_EXIST, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_REF_PROFILE_EXISTS, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_REF_PROFILE_DOES_NOT_EXIST, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_PROFILE_IS_COMPRESSED}"></val>
        </annotation>
    </item>
    <item name="androidx.profileinstaller.ProfileInstaller void result(java.util.concurrent.Executor, androidx.profileinstaller.ProfileInstaller.DiagnosticsCallback, int, java.lang.Object) 2">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.profileinstaller.ProfileInstaller.RESULT_INSTALL_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_ALREADY_INSTALLED, androidx.profileinstaller.ProfileInstaller.RESULT_UNSUPPORTED_ART_VERSION, androidx.profileinstaller.ProfileInstaller.RESULT_NOT_WRITABLE, androidx.profileinstaller.ProfileInstaller.RESULT_DESIRED_FORMAT_UNSUPPORTED, androidx.profileinstaller.ProfileInstaller.RESULT_BASELINE_PROFILE_NOT_FOUND, androidx.profileinstaller.ProfileInstaller.RESULT_IO_EXCEPTION, androidx.profileinstaller.ProfileInstaller.RESULT_PARSE_EXCEPTION, androidx.profileinstaller.ProfileInstaller.RESULT_META_FILE_REQUIRED_BUT_NOT_FOUND, androidx.profileinstaller.ProfileInstaller.RESULT_INSTALL_SKIP_FILE_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_DELETE_SKIP_FILE_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_SAVE_PROFILE_SIGNALLED, androidx.profileinstaller.ProfileInstaller.RESULT_SAVE_PROFILE_SKIPPED, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_FAILURE, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_UNKNOWN}"></val>
        </annotation>
    </item>
    <item name="androidx.profileinstaller.ProfileInstaller.DiagnosticsCallback void onDiagnosticReceived(int, java.lang.Object) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_CURRENT_PROFILE_EXISTS, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_CURRENT_PROFILE_DOES_NOT_EXIST, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_REF_PROFILE_EXISTS, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_REF_PROFILE_DOES_NOT_EXIST, androidx.profileinstaller.ProfileInstaller.DIAGNOSTIC_PROFILE_IS_COMPRESSED}"></val>
        </annotation>
    </item>
    <item name="androidx.profileinstaller.ProfileInstaller.DiagnosticsCallback void onResultReceived(int, java.lang.Object) 0">
        <annotation name="androidx.annotation.IntDef">
            <val name="value" val="{androidx.profileinstaller.ProfileInstaller.RESULT_INSTALL_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_ALREADY_INSTALLED, androidx.profileinstaller.ProfileInstaller.RESULT_UNSUPPORTED_ART_VERSION, androidx.profileinstaller.ProfileInstaller.RESULT_NOT_WRITABLE, androidx.profileinstaller.ProfileInstaller.RESULT_DESIRED_FORMAT_UNSUPPORTED, androidx.profileinstaller.ProfileInstaller.RESULT_BASELINE_PROFILE_NOT_FOUND, androidx.profileinstaller.ProfileInstaller.RESULT_IO_EXCEPTION, androidx.profileinstaller.ProfileInstaller.RESULT_PARSE_EXCEPTION, androidx.profileinstaller.ProfileInstaller.RESULT_META_FILE_REQUIRED_BUT_NOT_FOUND, androidx.profileinstaller.ProfileInstaller.RESULT_INSTALL_SKIP_FILE_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_DELETE_SKIP_FILE_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_SAVE_PROFILE_SIGNALLED, androidx.profileinstaller.ProfileInstaller.RESULT_SAVE_PROFILE_SKIPPED, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_SUCCESS, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_FAILURE, androidx.profileinstaller.ProfileInstaller.RESULT_BENCHMARK_OPERATION_UNKNOWN}"></val>
        </annotation>
    </item>
</root>
