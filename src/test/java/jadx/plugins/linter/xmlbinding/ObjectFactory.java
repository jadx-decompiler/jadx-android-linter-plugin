//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.4
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
//

package jadx.plugins.linter.xmlbinding;

import javax.xml.namespace.QName;

import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the generated package.
 * <p>
 * An ObjectFactory allows you to programmatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups. Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

	private static final QName ROOT_QNAME = new QName("", "root");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for
	 * package: generated
	 *
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link RootType }
	 *
	 * @return
	 *         the new instance of {@link RootType }
	 */
	public RootType createRootType() {
		return new RootType();
	}

	/**
	 * Create an instance of {@link AnnotationType }
	 *
	 * @return
	 *         the new instance of {@link AnnotationType }
	 */
	public AnnotationType createAnnotationType() {
		return new AnnotationType();
	}

	/**
	 * Create an instance of {@link ItemType }
	 *
	 * @return
	 *         the new instance of {@link ItemType }
	 */
	public ItemType createItemType() {
		return new ItemType();
	}

	/**
	 * Create an instance of {@link ValType }
	 *
	 * @return
	 *         the new instance of {@link ValType }
	 */
	public ValType createValType() {
		return new ValType();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link RootType }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link RootType }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "root")
	public JAXBElement<RootType> createRoot(RootType value) {
		return new JAXBElement<>(ROOT_QNAME, RootType.class, null, value);
	}

}
